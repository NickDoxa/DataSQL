package net.oasisgames.datasql.frames;

import java.awt.Color;
import java.io.File;
import java.sql.SQLException;

import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

import net.oasisgames.datasql.database.Connection;
import net.oasisgames.datasql.frames.controllers.MainMenuControl;
import net.oasisgames.datasql.frames.controllers.SelectActionControl;

/**
 * @author Nick Doxa
 * @apiNote Windows Form created using NetBeans IDE
 */
public class SelectAction extends javax.swing.JFrame implements FrameControl {

	private static boolean isOpen;
	
	private static boolean exists;
	
	static {
		isOpen = false;
		exists = false;
	}
	
	public static boolean isFrameCreated() {
		return exists;
	}
	
	public static boolean isFrameOpen() {
		return isOpen;
	}
	
	protected static void setOpenStatus(boolean open) {
		isOpen = open;
	}
	
	@Override
    public void closeWindow() {
    	this.setVisible(false);
    	this.setEnabled(false);
    	setOpenStatus(false);
    }
    
    @Override
    public void openWindow() {
    	MainMenuControl.setFrameToCenterScreen(this);
    	this.setVisible(true);
    	this.setEnabled(true);
    	setOpenStatus(true);
    }
    
	private FrameControl lastFrame;
	
	@Override
	public FrameControl getPreviousFrame() {
		return lastFrame;
	}

	@Override
	public void setPreviousFrame(FrameControl frame) {
		lastFrame = frame;
	}
	
	private static final long serialVersionUID = -6754780667901006607L;
	
	private final SelectActionControl controller;
	
    public SelectAction() {
        controller = new SelectActionControl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        exportButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        fileNameLabel = new javax.swing.JLabel();
        selectFileButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        expButtonLabel = new javax.swing.JLabel();
        uploadButtonLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        setTitle("DataSQL");
        setMaximumSize(new java.awt.Dimension(500, 340));
        setMinimumSize(new java.awt.Dimension(500, 340));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 340));
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exportButton.setText("Export Table to File");
        exportButton.addActionListener(evt -> {
        	try {
				controller.exportTable();
				errorLabel.setForeground(Color.GREEN);
				errorLabel.setText("Export Successful!");
			} catch (SQLException | NullPointerException e) {
				errorLabel.setForeground(Color.RED);
				errorLabel.setText("Export Failed!");
				if (Connection.isDebug()) e.printStackTrace();
			}
        });
        jPanel1.add(exportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 160, -1));

        uploadButton.setText("Upload Data to Table");
        jPanel1.add(uploadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 160, -1));

        backButton.setText("Back");
        backButton.addActionListener(evt -> {
        	controller.backButton();
        });
        jPanel1.add(backButton,  new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 300, -1, -1));
        
        titleLabel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Select Action");
        jPanel1.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 210, -1));

        fileNameLabel.setBackground(new java.awt.Color(255, 255, 204));
        fileNameLabel.setText("empty");
        jPanel1.add(fileNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 170, 20));

        selectFileButton.setText("Select File");
        selectFileButton.addActionListener(evt -> {
        	File file = controller.openFileChooser();
        	if (file == null) return;
        	controller.setSelectedFile(file);
        	fileNameLabel.setText(file.getAbsolutePath());
        });
        jPanel1.add(selectFileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));
        
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorLabel.setFocusable(false);
        errorLabel.setForeground(Color.BLACK);
        errorLabel.setToolTipText("Error Text");
        jPanel1.add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 210, 20));

        expButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        expButtonLabel.setText("Select text file to export table contents to. Then press here:");
        jPanel1.add(expButtonLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 330, 20));

        uploadButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        uploadButtonLabel.setText("This action will allow you to upload and update data within the table.");
        jPanel1.add(uploadButtonLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 410, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 340));

        pack();
    }                      

    @Override
    public void run() {
    	if (isFrameOpen()) return;
    	if (isFrameCreated()) {
    		openWindow();
    		return;
    	}
        try {
        	UIManager.setLookAndFeel(lookAndFeel);
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectAction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectAction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectAction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectAction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	initComponents();
            	openWindow();
            	exists = true;
            }
        });
    }
    
    public FileNameExtensionFilter getFileFilter() {
        FileNameExtensionFilter txtfilter = new FileNameExtensionFilter(
     "txt files (*.txt)", "txt");
        return txtfilter;
    }
                    
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel expButtonLabel;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel uploadButtonLabel;
    private javax.swing.JButton uploadButton;     
    private javax.swing.JButton backButton;

}
